"""
-------------------------------------------------------
Lab/Assignment  Testing (a04)
-------------------------------------------------------
Author:  Cassel Robson
ID:      210507000
Email:   robs7000@mylaurier.ca
Version: 2021-010-25
-------------------------------------------------------
"""
-------------------------------------------------------
t01
from Hash_Set_array import Hash_Set
from functions import insert_words, comparison_total

hs = Hash_Set(20)


file = open('otoos610.txt', 'rt')


insert_words(file, hs)

total, max_value = comparison_total(hs)


print("Using array-based list Hash_Set")
print()

print(f'Total comparisons: {total:,}')

print(
    f"Word with maximum comparisons '{max_value.word}':{max_value.comparisons:,}")


#OUTPUT


Using array-based list Hash_Set

Total comparisons: 10,659
Word with maximum comparisons 'the':131



-------------------------------------------------------
t02
from Hash_Set_sorted import Hash_Set
from functions import insert_words, comparison_total

hs = Hash_Set(20)

file = open('otoos610.txt', 'rt')

insert_words(file, hs)

file.close()

total, max_value = comparison_total(hs)

print("Using array-based Sorted List Hash_Set")
print()
print(f"Total Comparisons: {total:,}")
print(
    f"Word with maximum comparisons '{max_value.word}': {max_value.comparisons:,}")


#OUTPUT

Using array-based Sorted List Hash_Set

Total Comparisons: 8,272
Word with maximum comparisons 'of': 167


-------------------------------------------------------
t03

from Hash_Set_BST import Hash_Set
from functions import insert_words, comparison_total

hs = Hash_Set(20)

file = open('otoos610.txt', 'rt')

insert_words(file, hs)

file.close()

total, max_value = comparison_total(hs)

print("Using linked BST Hash_Set")
print()
print(f"Total Comparisons: {total:,}")
print(
    f"Word with maximum comparisons '{max_value.word}': {max_value.comparisons:,}")
    
    #OUTPUT
    
Using linked BST Hash_Set

Total Comparisons: 11,048
Word with maximum comparisons 'the': 324

-------------------------------------------------------
t04

from BST_linked import BST

bst = BST()

lst = [13, 3, 5, 66, 9, 234, 65]

for value in lst:
    bst.insert(value)

zero, one, two = bst.node_counts()

print("Number of nodes with no children: ")
print(zero)

print()
print("Number of nodes with one child: ")
print(one)

print()
print("Number of nodes with two children: ")
print(two)

print()
print("BST contains 15?: ")
print(5 in bst)

print()
print("Parent Node for 15: ")
print(bst.parent(5))

print()
print("Parent Node for 8 (found recursively): ")
print(bst.parent_r(9))


#OUTPUT

Number of nodes with no children: 
3

Number of nodes with one child: 
2

Number of nodes with two children: 
2

BST contains 15?: 
True

Parent Node for 15: 
3

Parent Node for 8 (found recursively): 
5


